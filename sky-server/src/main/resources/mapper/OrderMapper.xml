<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sky.mapper.OrderMapper">
    <insert id="insert" parameterType="Orders" useGeneratedKeys="true" keyProperty="id">
        insert into orders (number, status, user_id, address_book_id, order_time, checkout_time, pay_method, pay_status,
                            amount, remark, phone, address, consignee, estimated_delivery_time, delivery_status,
                            pack_amount, tableware_number, tableware_status)
        values (#{number}, #{status}, #{userId}, #{addressBookId}, #{orderTime}, #{checkoutTime}, #{payMethod},
                #{payStatus}, #{amount}, #{remark}, #{phone}, #{address}, #{consignee}, #{estimatedDeliveryTime},
                #{deliveryStatus}, #{packAmount}, #{tablewareNumber}, #{tablewareStatus})
    </insert>
    
    <resultMap id="orderVO" type="com.sky.vo.OrderVO">
        <id column="id" property="id"/>
        <result column="number" property="number"/>
        <result column="status" property="status"/>
        <result column="user_id" property="userId"/>
        <result column="address_book_id" property="addressBookId"/>
        <result column="order_time" property="orderTime"/>
        <result column="checkout_time" property="checkoutTime"/>
        <result column="pay_method" property="payMethod"/>
        <result column="pay_status" property="payStatus"/>
        <result column="amount" property="amount"/>
        <result column="remark" property="remark"/>
        <result column="phone" property="phone"/>
        <result column="address" property="address"/>
        <result column="user_name" property="userName"/>
        <result column="consignee" property="consignee"/>
        <result column="cancel_reason" property="cancelReason"/>
        <result column="rejection_reason" property="rejectionReason"/>
        <result column="cancel_time" property="cancelTime"/>
        <result column="estimated_delivery_time" property="estimatedDeliveryTime"/>
        <result column="delivery_status" property="deliveryStatus"/>
        <result column="delivery_time" property="deliveryTime"/>
        <result column="pack_amount" property="packAmount"/>
        <result column="tableware_number" property="tablewareNumber"/>
        <result column="tableware_status" property="tablewareStatus"/>
        <result column="order_dishes" property="orderDishes"/>
        <collection property="orderDetailList" ofType="com.sky.entity.OrderDetail">
            <id column="d_id" property="id"/>
            <result column="d_name" property="name"/>
            <result column="d_image" property="image"/>
            <result column="d_order_id" property="orderId"/>
            <result column="d_dish_id" property="dishId"/>
            <result column="d_setmeal_id" property="setmealId"/>
            <result column="d_dish_flavor" property="dishFlavor"/>
            <result column="d_number" property="number"/>
            <result column="d_amount" property="amount"/>
        </collection>
    </resultMap>
    
    <select id="list" resultMap="orderVO">
        select o.*,
               d.id d_id,
               d.name d_name,
               d.image d_image,
               d.order_id d_order_id,
               d.dish_id d_dish_id,
               d.setmeal_id d_setmeal_id,
               d.dish_flavor d_dish_flavor,
               d.number d_number,
               d.amount d_amount
        from orders o
                 left join order_detail d on o.id = d.order_id
        <where>
            <if test="number != null and number != ''">
                and o.number like concat('%', #{number}, '%')
            </if>
            <if test="phone != null and phone != ''">
                and o.phone like concat('%', #{phone}, '%')
            </if>
            <if test="status != null">
                and o.status = #{status}
            </if>
            <if test="beginTime != null and endTime == null">
                and o.order_time > #{beginTime}
            </if>
            <if test="endTime != null and beginTime == null">
                and #{endTime} > o.order_time
            </if>
            <if test="beginTime != null and endTime != null">
                and o.order_time between #{beginTime} and #{endTime}
            </if>
            <if test="userId != null">
                and o.user_id = #{userId}
            </if>
        </where>
        order by o.order_time desc
    </select>

    <update id="update">
        update orders
        <set>
            <if test="number != null and number != ''">
                number = #{number},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="addressBookId != null">
                address_book_id = #{addressBookId},
            </if>
            <if test="orderTime != null">
                order_time = #{orderTime},
            </if>
            <if test="checkoutTime != null">
                checkout_time = #{checkoutTime},
            </if>
            <if test="payMethod != null">
                pay_method = #{payMethod},
            </if>
            <if test="payStatus != null">
                pay_status = #{payStatus},
            </if>
            <if test="amount != null">
                amount = #{amount},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark},
            </if>
            <if test="userName != null and userName != ''">
                user_name = #{userName},
            </if>
            <if test="phone != null and phone != ''">
                phone = #{phone},
            </if>
            <if test="address != null and address != ''">
                address = #{address},
            </if>
            <if test="consignee != null and consignee != ''">
                consignee = #{consignee},
            </if>
            <if test="cancelReason != null and cancelReason != ''">
                cancel_reason = #{cancelReason},
            </if>
            <if test="rejectionReason != null and rejectionReason != ''">
                rejection_reason = #{rejectionReason},
            </if>
            <if test="cancelTime != null">
                cancel_time = #{cancelTime},
            </if>
            <if test="estimatedDeliveryTime != null">
                estimated_delivery_time = #{estimatedDeliveryTime},
            </if>
            <if test="deliveryStatus != null">
                delivery_status = #{deliveryStatus},
            </if>
            <if test="deliveryTime != null">
                delivery_time = #{deliveryTime},
            </if>
            <if test="packAmount != null">
                pack_amount = #{packAmount},
            </if>
            <if test="tablewareNumber != null">
                tableware_number = #{tablewareNumber},
            </if>
            <if test="tablewareStatus != null">
                tableware_status = #{tablewareStatus}
            </if>
        </set>
        <where>
            <if test="userId != null">
                user_id = #{userId}
            </if>
            <if test="number != null">
                and number = #{number}
            </if>
            <if test="id != null">
                and id = #{id}
            </if>
        </where>


    </update>

    <select id="listById" resultMap="orderVO">
        select o.*,
               d.id d_id,
               d.name d_name,
               d.image d_image,
               d.order_id d_order_id,
               d.dish_id d_dish_id,
               d.setmeal_id d_setmeal_id,
               d.dish_flavor d_dish_flavor,
               d.number d_number,
               d.amount d_amount
        from orders o
                 left join order_detail d on o.id = d.order_id
        where o.id = #{id}
    </select>

    <select id="statistics" resultType="java.util.Map">
        select case status
                   when 2 then 'toBeConfirmed'
                   when 3 then 'confirmed'
                   when 4 then 'deliveryInProgress'
                   end status,
               count(status) count
        from orders
        where status in (2, 3, 4)
        group by status
    </select>

    <select id="getTurnover" resultType="java.lang.Double">
        select sum(amount)
        from orders
        where status = #{status} and order_time between #{begin} and #{end}
    </select>

    <select id="getCount" resultType="java.lang.Integer">
        select count(*)
        from orders
        <where>
            <if test="begin != null">
                and order_time > #{begin}
            </if>
            <if test="end != null">
                and #{end} > order_time
            </if>
        </where>
    </select>

    <select id="getValidCount" resultType="java.lang.Integer">
        select count(*)
        from orders
        <where>
            <if test="begin != null">
                and order_time > #{begin}
            </if>
            <if test="end != null">
                and #{end} > order_time
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
        </where>
    </select>
    
    <select id="getTop10" resultType="java.util.Map">
        select name, count(*) count
        from order_detail od left join orders o on od.order_id = o.id
        where o.order_time between #{begin} and #{end}
        group by name
        order by count desc
        limit 10
    </select>
</mapper>